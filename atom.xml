<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[许文辉的博客]]></title>
  <subtitle><![CDATA[工作·生活]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.xuwenhui.net/"/>
  <updated>2015-06-18T16:48:42.762Z</updated>
  <id>http://www.xuwenhui.net/</id>
  
  <author>
    <name><![CDATA[许文辉]]></name>
    <email><![CDATA[398279436@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[蓝桥杯比赛算法总结]]></title>
    <link href="http://www.xuwenhui.net/2015/06/18/%E8%93%9D%E6%A1%A5%E6%9D%AF%E6%AF%94%E8%B5%9B%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://www.xuwenhui.net/2015/06/18/蓝桥杯比赛算法总结/</id>
    <published>2015-06-18T14:35:24.000Z</published>
    <updated>2015-06-18T16:48:42.762Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>斐波那契（记忆化搜索）  </p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int memo[MAX_N + 1];  </span><br><span class="line">int fib(int <span class="keyword">n</span>) &#123;  </span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">n</span> &lt;= 1) <span class="keyword">return</span> <span class="keyword">n</span>;  </span><br><span class="line">	<span class="keyword">if</span> (memo[<span class="keyword">n</span>] != 0) <span class="keyword">return</span> memo[<span class="keyword">n</span>];  </span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> memo[<span class="keyword">n</span>] = fib(<span class="keyword">n</span>-1) + fib(<span class="keyword">n</span>-2);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>全排列n个元素(非常好用)  </p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//k：当前交换位置与其后元素交换  </span><br><span class="line"><span class="keyword">public</span> static void f(<span class="built_in">char</span>[] <span class="type">data</span>, <span class="built_in">int</span> k)&#123;  </span><br><span class="line">	<span class="keyword">if</span> (k == <span class="type">data</span>.length) &#123;  </span><br><span class="line">		for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="type">data</span>.length; i++)  </span><br><span class="line">			system.<span class="type">out</span>.<span class="built_in">print</span>(<span class="type">data</span>[i] + <span class="string">" "</span>);  </span><br><span class="line">		system.<span class="type">out</span>.println();  </span><br><span class="line">	&#125;  </span><br><span class="line">	for (<span class="built_in">int</span> i = k; i &lt; <span class="type">data</span>.length; i++) &#123;  </span><br><span class="line">		<span class="built_in">char</span> t = <span class="type">data</span>[k]; <span class="type">data</span>[k] = <span class="type">data</span>[i]; <span class="type">data</span>[i] = t;//试探  </span><br><span class="line">		f(<span class="type">data</span>, k + <span class="number">1</span>);  </span><br><span class="line">		<span class="built_in">char</span> t = <span class="type">data</span>[k]; <span class="type">data</span>[k] = <span class="type">data</span>[i]; <span class="type">data</span>[i] = t;//回溯  </span><br><span class="line">	&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>辗转相除法求最大公约数  </p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;  </span><br><span class="line">	<span class="keyword">if</span> (b == <span class="number">0</span>) <span class="keyword">return</span> a;  </span><br><span class="line">	<span class="keyword">else</span> <span class="function"><span class="keyword">return</span> <span class="title">gcd</span><span class="params">(b, a % b)</span></span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>埃氏筛法（搜索n以内的所有素数）  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> prime[MAX_N];<span class="comment">//第i个素数  </span></span><br><span class="line"><span class="keyword">bool</span> is_prime[MAX_N + <span class="number">1</span>];  </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回n以内素数的个数  </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sieve</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;  </span><br><span class="line">	<span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)  </span><br><span class="line">		is_prime[i] = <span class="keyword">true</span>;  </span><br><span class="line">	is_prime[<span class="number">0</span>] = is_prime[<span class="number">1</span>] = <span class="keyword">false</span>;  </span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;  </span><br><span class="line">		<span class="keyword">if</span> (is_prime[i])&#123;  </span><br><span class="line">			prime[p++] = i;  </span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>*i; j &lt;= n; j += i)  </span><br><span class="line">				is_prime[j] = <span class="keyword">false</span>;  </span><br><span class="line">		&#125;  </span><br><span class="line">	&#125;  </span><br><span class="line">	<span class="keyword">return</span> p;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>快速幂运算（反复平方法）  </p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算：x^n % mod  </span></span><br><span class="line"><span class="keyword">int</span> mod_pow(<span class="keyword">int</span> x, <span class="keyword">int</span> n, <span class="keyword">int</span> <span class="keyword">mod</span>) &#123;</span><br><span class="line">	<span class="keyword">int</span> res = <span class="number">1</span>;  </span><br><span class="line">	<span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">		<span class="keyword">if</span> (n &amp; <span class="number">1</span>)  </span><br><span class="line">			res = res * x % <span class="keyword">mod</span>;  </span><br><span class="line">		x = x * x % <span class="keyword">mod</span>;  </span><br><span class="line">		n &gt;&gt; = <span class="number">1</span>;</span><br><span class="line">	&#125;  </span><br><span class="line">	<span class="keyword">return</span> res;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr>
<p>我总觉得要把静态博客玩成动态博客才有意思，所以我又无耻的从Dribbble拖了张动图，哈哈o(∩_∩)o。<br><img src="http://7xjda2.com1.z0.glb.clouddn.com/ff7_animation_dribbble.gif" alt="">  </p>
<blockquote>
<p>注：图片来自于<a href="https://dribbble.com/shots/2072784-Final-Fantasy-VII-Alternate-Timeline" target="_blank" rel="external">Dribbble</a>。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[今天突然想把我自己在蓝桥杯比赛时准备的一些算法记录下来，以便翻阅。]]>
    
    </summary>
    
      <category term="算法" scheme="http://www.xuwenhui.net/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="蓝桥杯" scheme="http://www.xuwenhui.net/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
      <category term="算法" scheme="http://www.xuwenhui.net/categories/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[整理的学习网站（不定期补充···）]]></title>
    <link href="http://www.xuwenhui.net/2015/06/08/%E6%95%B4%E7%90%86%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/"/>
    <id>http://www.xuwenhui.net/2015/06/08/整理的学习网站/</id>
    <published>2015-06-08T02:00:26.000Z</published>
    <updated>2015-06-18T16:38:34.245Z</updated>
    <content type="html"><![CDATA[<h1 id="IT网站">IT网站</h1><p>各种十分好用的IT网站。  </p>
<ul>
<li><a href="https://github.com/" target="_blank" rel="external">GitHub</a> - 全球知名的代码托管平台  </li>
<li><a href="http://www.oschina.net/" target="_blank" rel="external">开源中国</a> - 中国最大的开源技术社区  </li>
<li><a href="http://apistore.baidu.com/" target="_blank" rel="external">API Store</a> - 最近常常调用API，百度整理的十分丰富的API资源  </li>
<li><a href="http://www.csdn.net/" target="_blank" rel="external">CSDN.NET</a> - 全球最大中文IT社区，各种博客什么的还不错  </li>
<li><a href="https://portal.qiniu.com/" target="_blank" rel="external">七牛云存储</a> - 图床工具，简单好用，我的博客的图片资源地址就来自于此  </li>
<li><a href="http://bestcbooks.com/" target="_blank" rel="external">计算机书籍控</a> - 提供各种计算机类的书籍PDF下载，分类整理的还不错，还有程序员必读书籍  </li>
</ul>
<hr>
<h1 id="博客">博客</h1><p>我经常光顾的一些大牛博客，主要是android相关。  </p>
<ul>
<li><a href="http://www.stormzhang.com/" target="_blank" rel="external">stormzhang</a> - 在<a href="http://www.androiddevtools.cn/" target="_blank" rel="external">AndroidDevTools</a>上知道的  </li>
<li><a href="http://elya.cc/" target="_blank" rel="external">elya</a> - 干货挺多  </li>
<li><a href="http://blog.csdn.net/guolin_blog" target="_blank" rel="external">郭霖</a> - 《第一行代码——Android》的作者  </li>
</ul>
<hr>
<h1 id="图片素材">图片素材</h1><p>有时候常常需要图片方面的素材，你如果百度“图片素材”你会发现那些个图片真是丑的不行······  </p>
<ul>
<li><a href="http://www.duitang.com/" target="_blank" rel="external">堆糖</a> - 分享收集生活中的美好，遇见世界上的另外一个你。  </li>
<li><a href="https://dribbble.com/" target="_blank" rel="external">Dribbble</a> - Show and tell for designers  </li>
</ul>
<hr>
<h1 id="视频学习">视频学习</h1><p>一些我用过的技术学习视频网站，评价是网站自带的标题，各有各的特点，不予点评···  </p>
<ul>
<li><a href="http://www.imooc.com/" target="_blank" rel="external">慕课网</a> - 国内最大的IT技能学习平台  </li>
<li><a href="http://www.maiziedu.com/" target="_blank" rel="external">麦子学院</a> - 专业的IT在线职业教育平台  </li>
<li><a href="http://www.jikexueyuan.com/" target="_blank" rel="external">极客学院</a> - 中国最大的IT职业在线教育平台  </li>
</ul>
<hr>
<p>唉，o(︶︿︶)o 太忙了，一周没更新博客了。暂时只更新这些，以后发现了好的学习网站会记录的~~<br>ps：如果大家有好的学习网站，可以留言推荐给我！<br><img src="http://7xjda2.com1.z0.glb.clouddn.com/bb_reel_6-6_dribbble.gif" alt="">  </p>
<blockquote>
<p>注：图片来自于<a href="https://dribbble.com/shots/2095826-Honey-Power?list=animated&amp;sort=comments&amp;timeframe=month&amp;offset=72" target="_blank" rel="external">Dribbble</a>。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[整理一些自己觉得实用的网站，主要是和技术相关。]]>
    
    </summary>
    
      <category term="学习网站" scheme="http://www.xuwenhui.net/tags/%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/"/>
    
      <category term="学习网站" scheme="http://www.xuwenhui.net/categories/%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于博客]]></title>
    <link href="http://www.xuwenhui.net/2015/05/30/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.xuwenhui.net/2015/05/30/关于博客/</id>
    <published>2015-05-30T07:53:25.000Z</published>
    <updated>2015-06-08T03:27:16.297Z</updated>
    <content type="html"><![CDATA[<p><em>花了几天时间，终于成功搭建了我的独立博客~~~喜o(∩_∩)o</em></p>
<h1 id="感谢在前">感谢在前</h1><hr>
<p>我的博客的搭建主要是参考了<a href="http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/" target="_blank" rel="external">这篇博客</a>的内容，文章写的很好，过程相当清楚，十分感谢作者的辛勤付出！</p>
<hr>
<h1 id="博客说明">博客说明</h1><hr>
<p>本博客是静态博客，是搭建在<a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a>上使用了<a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>开源框架完成的。</p>
<hr>
<h1 id="总结">总结</h1><hr>
<p>此处只给出我的一些总结，具体步骤请移步前文链接:</p>
<h2 id="搭建独立博客的主要问题：">搭建独立博客的主要问题：</h2><ul>
<li>域名</li>
<li>空间</li>
<li>博客框架</li>
<li>写博客</li>
</ul>
<h2 id="解决方案：">解决方案：</h2><ol>
<li><p><strong>域名：</strong>去域名注册服务商购买顶级域名，或者去一些开放平台注册免费的二级域名</p>
<p> <em>注：我是在万网花39元购买顶级域名xuwenhui.net,可以使用一年。不是打广告啊！！！<a href="http://www.net.cn/" target="_blank" rel="external">万网</a>是阿里云旗下的，在国内是最大的域名注册服务商，国际上最大的域名注册服务商是<a href="https://www.godaddy.com" target="_blank" rel="external">Go Daddy</a>，貌似网上别人都推荐去这个，不过，支持国产嘛~~。你可以去万网搜索你想要的任何域名地址，如果没有被注册，你就可以立马下手了，相对于购买主机、空间等，域名真真是太便宜了。也是因为这个原因，我只花钱买了域名，其他的都用的免费的。</em></p>
</li>
<li><p><strong>空间：</strong>去购买云服务器、云主机，或者使用各种免费的云平台（如SAE、JAE），再或者就是利用<a href="http://pages.github.com/" target="_blank" rel="external">Github Pages</a>建立静态博客</p>
<p> <em>注：由于各种免费的云平台实在太坑，最终我决定自己动手搭建，我使用Github Pages建立了静态博客，接下来需要做的是将独立域名与GitHub Pages的空间绑定，这样一个基本的博客空壳搭建成功。</em><br><img src="http://7xjda2.com1.z0.glb.clouddn.com/github.jpg" alt=""></p>
</li>
<li><p><strong>博客框架：</strong>博客框架有很多，比如最鼎鼎大名的<a href="https://wordpress.org/" target="_blank" rel="external">WordPress</a>、还有Octopress、Jekyll、Hexo等</p>
<p> <em>注：<a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>是一款基于Node.js的静态博客框架，实践发现确实安装配置起来比较简单，就如它官方介绍的一样：快速、简单、强大。然后关于Hexo的主题资源也比较丰富，我使用的主题是<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a>这款主题。</em><br><img src="http://7xjda2.com1.z0.glb.clouddn.com/hexo.jpg" alt=""></p>
</li>
<li><p><strong>写博客：</strong>专注于文字而不是排版，推荐使用Markdown语言</p>
<p> <em>注：这里有一篇很好的<a href="http://www.jianshu.com/p/q81RER" target="_blank" rel="external">Markdown新手指南</a>。搭建好独立博客以后，我现在的写博客过程就变得十分容易了：(1).用<a href="http://markdownpad.com/" target="_blank" rel="external">MarkdownPad 2</a>客户端写博客，(2).使用hexo命令：hexo d -g部署到我的网站。OK，就是这么容易！！！</em></p>
</li>
</ol>
<hr>
<h1 id="结束">结束</h1><p>第一次搭建博客，过程并不容易，但也算竣工了。总的感受是：</p>
<blockquote>
<p>自己的独立博客，仍需要好好经营，勤于管理，一旦荒废，其实一文不值。<br>内容不管是总结技术，还是记录生活点滴，都是一个人的成长。一切为了更加强大的自己！</p>
</blockquote>
<p>很喜欢这样一句话，与君共勉：</p>
<blockquote>
<p>我们的征途是星辰大海。</p>
</blockquote>
<p>此处盗图一张：</p>
<p><img src="http://7xjda2.com1.z0.glb.clouddn.com/小米招聘.jpg" alt=""></p>
<p><em>注：欢迎为本网站指出问题，我将及时解决。</em></p>
]]></content>
    <summary type="html">
    <![CDATA[主要说明我在博客的搭建过程中的总结与感受，欢迎留言，欢迎交流。]]>
    
    </summary>
    
      <category term="关于博客" scheme="http://www.xuwenhui.net/tags/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="关于博客" scheme="http://www.xuwenhui.net/categories/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>